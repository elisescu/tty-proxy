# Define a yaml with:
# ---
# your_subdomain: https://whatever.whatever.whatever
# ssl:
#  chain: path_to_your_chain
#  key: path_to_your_key
#
# ---

# Module is loaded by default on container
# load_module modules/ngx_stream_module.so;

events {
   worker_connections  1024;  ## Default: 1024
}
# You may have to install the stream module separately


stream {
    upstream backend {
      server tty-proxy:3456;
    }
    log_format json_combined escape=json
      '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_port":"$remote_port",'
        '"hostname": "$hostname",'
        '"status": "$status",'
        '"bytes_sent":"$bytes_sent",'
        '"bytes_received":"$bytes_received",'
        '"connection":"$connection"'
      '}';
    # https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server
    # the tty-server tcp connection ssl proxy
    server {
        # If ssl is given
        {{#ssl}}
          listen 3456 ssl so_keepalive=30m::10;
          # proxy_ssl off means terminate ssl here which is good. 
          proxy_ssl off;
          ssl_certificate {{ssl.chain}}; 
          ssl_certificate_key {{ssl.key}};
        {{/ssl}}

        # If ssl is empty or missing
        {{^ssl}}
          listen 127.0.0.1:3456;
        {{/ssl}}

        proxy_pass backend;
        access_log /var/log/nginx/stream.log json_combined;
    }
}

http {
  log_format json_combined escape=json
    '{'
      '"time_local":"$time_local",'
      '"remote_addr":"$remote_addr",'
      '"remote_user":"$remote_user",'
      '"request":"$request",'
      '"status": "$status",'
      '"body_bytes_sent":"$body_bytes_sent",'
      '"request_time":"$request_time",'
      '"http_referrer":"$http_referer",'
      '"http_user_agent":"$http_user_agent"'
    '}';

  # if ssl is given
  {{#ssl}}
  map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
      }

  server {
      listen 80;
      server_name {{your_subdomain}};
      return 301 https://{{your_subdomain}}$request_uri;
           }

   server {
       listen 443 ssl;
       server_name {{your_subdomain}};
       
       ssl_certificate {{ssl.chain}}; 
       ssl_certificate_key {{ssl.key}};
       
       access_log /var/log/nginx/data-access.log json_combined;
      
       location / {
              proxy_pass http://tty-proxy:8080;
              proxy_set_header X-Real-IP  $remote_addr;
              proxy_set_header X-Forwarded-For $remote_addr;
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_redirect http://tty-proxy $scheme://$http_host/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              proxy_read_timeout 20d;
              proxy_buffering off;
              }
      }

   {{/ssl}}

   # if ssl is not given
   {{^ssl}}
     server {
        listen 127.0.0.1:80;

        server_name {{your_subdomain}};
        location / {
          proxy_pass http://tty-proxy:8080;
        }
     }
   {{/ssl}}

}
